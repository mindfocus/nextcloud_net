using System;
using System.Collections.Generic;

namespace OCP.FullTextSearch.Model
{
    /**
     * Interface IIndex
     *
     * Index are generated by FullTextSearch to manage the status of a document
     * regarding the date of the last index and the date of the last modification
     * of the original document.
     *
     * The uniqueness of an IIndexDocument is made by the Id of the Content Provider
     * and the Id of the original document within the Content Provider.
     *
     * We will call original document the source from which the IIndexDocument is
     * generated. As an example, an original document can be a file, a mail, ...
     *
     * @since 15.0.0
     *
     * @package OCP\FullTextSearch\Model
     */
    public interface IIndex
    {


        //const INDEX_OK = 1;
        //const INDEX_IGNORE = 2;

        //const INDEX_META = 4;
        //const INDEX_CONTENT = 8;
        //const INDEX_PARTS = 16;
        //const INDEX_FULL = 28;
        //const INDEX_REMOVE = 32;
        //const INDEX_DONE = 64;
        //const INDEX_FAILED = 128;

        //const ERROR_FAILED = 1;
        //const ERROR_FAILED2 = 2;
        //const ERROR_FAILED3 = 4;

        //const ERROR_SEV_1 = 1;
        //const ERROR_SEV_2 = 2;
        //const ERROR_SEV_3 = 3;
        //const ERROR_SEV_4 = 4;


        /**
         * Get the Id of the Content Provider.
         *
         * @since 15.0.0
         *
         * @return string
         */
        string getProviderId() ;


    /**
     * Get the Id of the original document.
     *
     * @since 15.0.0
     *
     * @return string
     */
    string getDocumentId();


    /**
     * Set the source of the original document.
     *
     * @since 15.0.0
     *
     * @param string source
     *
     * @return IIndex
     */
    IIndex setSource(string source);

    /**
     * Get the source of the original document.
     *
     * @since 15.0.0
     *
     * @return string
     */
    string getSource();


    /**
     * Set the owner of the original document.
     *
     * @since 15.0.0
     *
     * @param string ownerId
     *
     * @return IIndex
     */
    IIndex setOwnerId(string ownerId);

    /**
     * Get the owner of the original document.
     *
     * @since 15.0.0
     *
     * @return string
     */
    string getOwnerId();


    /**
     * Set the current index status (bit flag) of the original document.
     * If reset is true, the status is reset to the defined value.
     *
     * @since 15.0.0
     *
     * @param int status
     * @param bool reset
     *
     * @return IIndex
     */
    IIndex setStatus(int status, bool reset = false);

    /**
     * Get the current index status of the original document.
     *
     * @since 15.0.0
     *
     * @return int
     */
    int getStatus();

    /**
     * Check if the document fit a specific status.
     *
     * @since 15.0.0
     *
     * @param int status
     *
     * @return bool
     */
    bool isStatus(int status);

    /**
     * Remove a status.
     *
     * @since 15.0.0
     *
     * @param int status
     *
     * @return IIndex
     */
    IIndex unsetStatus(int status);


    /**
     * Add an option related to the original document (as string).
     *
     * @since 15.0.0
     *
     * @param string option
     * @param string|int value
     *
     * @return IIndex
     */
    IIndex addOption(string option, string value);

    /**
     * Add an option related to the original document (as integer).
     *
     * @since 15.0.0
     *
     * @param string option
     * @param int value
     *
     * @return IIndex
     */
    IIndex addOptionInt(string option, int value);

    /**
     * Get the option related to the original document (as string).
     *
     * @since 15.0.0
     *
     * @param string option
     * @param string default
     *
     * @return string
     */
    string getOption(string option, string @default = "");

    /**
     * Get the option related to the original document (as integer).
     *
     * @since 15.0.0
     *
     * @param string option
     * @param int default
     *
     * @return int
     */
    int getOptionInt(string option, int @default = 0);

    /**
     * Get all options related to the original document.
     *
     * @since 15.0.0
     *
     * @return array
     */
    IList<string> getOptions();


    /**
     * Add an error log related to the Index.
     *
     * @since 15.0.0
     *
     * @param string message
     * @param string exception
     * @param int sev
     *
     * @return IIndex
     */
    //IIndex addError(string message, string exception = "", int sev = self::ERROR_SEV_3): ;
    IIndex addError(string message, string exception = "", int sev = 3);

    /**
     * Returns the number of known errors related to the Index.
     *
     * @since 15.0.0
     *
     * @return int
     */
    int getErrorCount();

    /**
     * Reset all error logs related to the Index.
     *
     * @since 15.0.0
     */
    IIndex resetErrors();


    /**
     * Set the date of the last index.
     *
     * @since 15.0.0
     *
     * @param int lastIndex
     *
     * @return IIndex
     */
    IIndex setLastIndex(int lastIndex = -1);

    /**
     * Get the date of the last index.
     *
     * @since 15.0.0
     *
     * @return int
     */
    int getLastIndex();


}


}
